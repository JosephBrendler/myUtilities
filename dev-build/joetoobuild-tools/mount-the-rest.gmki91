#!/bin/bash
root_vg=vg_gmki91
mountpoint=/mnt/gentoo
efi_uuid=BA32-B92E
boot_partuuid=1ba5887c-7578-e646-be25-a665c902d20c

for x in $(lvs | grep ${root_vg} | grep -v 'root\|swap\|extra' | awk '{print $1}')
do
  [ ! -d ${mountpoint}/$x ] && echo "mkdir ${mountpoint}/$x..." && mkdir ${mountpoint}/$x
  mount /dev/mapper/${root_vg}-$x ${mountpoint}/$x
done

[ ! -d ${mountpoint}/efi ] && echo "mkdir ${mountpoint}/efi ..." && mkdir ${mountpoint}/efi
[ ! -d ${mountpoint}/boot ] && echo "mkdir ${mountpoint}/boot ..." && mkdir ${mountpoint}/boot
mount UUID=${efi_uuid} ${mountpoint}/efi
mount PARTUUID=${boot_partuuid} ${mountpoint}/boot

echo "here is what I mounted..."
mount | grep ${mountpoint}
echo


echo "mount /efi and /boot as below now, or at / AFTER chroot (see fstab)"
echo "   # mount UUID=${efi_uuid} ${mountpoint}/efi"
echo "   # mount PARTUUID=${boot_partuuid} ${mountpoint}/boot"

#/dev/nvme0n1p3: LABEL="boot_fs"
#    UUID="155b1b95-1e2e-4768-9ef3-4d92142ea56a" BLOCK_SIZE="4096" TYPE="ext4"
#    PARTUUID="1ba5887c-7578-e646-be25-a665c902d20c"
#/dev/nvme0n1p2: LABEL_FATBOOT="efi_fs" LABEL="efi_fs"
#    UUID="BA32-B92E" BLOCK_SIZE="512" TYPE="vfat"
#    PARTUUID="d13cc51e-f8d7-9f4d-8533-87b9b3975610"
#/dev/nvme0n1p4: TYPE="crypto_LUKS"
#    UUID="ef4195f0-6c4a-4116-86dd-fc469ddb6e21"
#    PARTUUID="377f75b4-0016-c541-aa5d-256a95ccff85"
