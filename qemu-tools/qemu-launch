#!/bin/bash
#
# helpful for qemu-system-aarch64 command syntax/options
#   https://manpages.debian.org/jessie/qemu-system-arm/qemu-system-aarch64.1.en.html

source /usr/local/sbin/script_header_brendlefly

BUILD=0.0.0a
VERBOSE=$TRUE
verbosity=3

CONFIG=""
launch_cmd=""

#-----[ default local variables ]----------------------------------------------
IMAGE_DIR=/home/joe/My_bcm2711-rpi-4-b_project/image
KERNEL=kernel8-raspiOS.img
INITRD=initramfs-rpi4b-6.11.1-202410050915
DTB=bcm2711-rpi-4-b.dtb
CPU=cortex-a72
MACHINE=raspi4b
MEM=2G
SMP=4
TARGET=raspi5640x_gpt.img
KEYDEV=keydev.img
ROOT=/dev/mmcblk0p2
KEYBOARD=""
KEYBOARD_ID="046d:c534"
NETWORK="usb-net,netdev=net0 -netdev user,id=net0"
launch_wait=5

CMDLINE="console=tty1 console=ttyAMA0,115200 rw earlyprintk \
  root=${ROOT} rootfstype=ext4 elevator=deadline fsck.repair=yes \
  rootdelay=1 net.ifnames=0"

varlist="DEFAULT_CMD CONFIG IMAGE_DIR KERNEL DTB TARGET INITRD KEYDEV ROOT MACHINE CPU MEM SMP KEYBOARD NETWORK BREAK lv.CMDLINE BREAK lv.launch_cmd BREAK bool.VERBOSE verbosity launch_wait"

# if a local or /etc/ qemu-tools.conf exists, use it to override the above
[[ -f "/usr/local/sbin/qemu-tools.conf" ]] && CONFIG="/usr/local/sbin/qemu-tools.conf"
[[ -f "./qemu-tools.conf" ]] && CONFIG="./qemu-tools.conf"
[[ -f "/etc/qemu-tools/qemu-tools.conf" ]] && CONFIG="/etc/qemu-tools/qemu-tools.conf"
source ${CONFIG}

#-----[ functions ]----------------------------------------------
display_config()
{
#separator "Configuration" $(hostname)
message "${BYon}Current Configuration --${Boff}"
longest=$(get_longest ${varlist})
display_vars ${longest} ${varlist}
}

configure_keyboard()
{
  # get keyboard bus and device nuber from lsusb; convert to numeric with $(( ))
  HOSTBUS=$(( $(lsusb | grep ${KEYBOARD_ID} | cut -d' ' -f2) ))
  HOSTADDR=$(( $(lsusb | grep ${KEYBOARD_ID} | cut -d' ' -f4 | sed 's|:$||' ) ))
  KEYBOARD="usb-host,hostbus=${HOSTBUS},hostaddr=${HOSTADDR}"
}

build_command()
{
launch_cmd="qemu-system-aarch64"
[ -n "${MACHINE}" ] && launch_cmd+=" -M ${MACHINE}"
[ -n "${CMDLINE}" ] && launch_cmd+=" -append \"${CMDLINE}\""
[ -n "${DTB}" ] && launch_cmd+=" -dtb ${DTB}"
[ -n "${TARGET}" ] && launch_cmd+=" -drive if=sd,file=${TARGET},format=raw"
##[ -n "${TARGET}" ] && launch_cmd+=" -sd ${TARGET}"
[ -n "${KERNEL}" ] && launch_cmd+=" -kernel ${KERNEL}"
[ -n "${INITRD}" ] && launch_cmd+=" -initrd ${INITRD}"
[ -n "${MEM}" ] && launch_cmd+=" -m ${MEM}"
[ -n "${SMP}" ] && launch_cmd+=" -smp ${SMP}"
##launch_cmd+=" -serial stdio -usb"
launch_cmd+=" -serial stdio"
[ -n "${NETWORK}" ] && launch_cmd+=" -device ${NETWORK}"
##[ -n "${KEYBOARD}" ] && launch_cmd+=" -device ${KEYBOARD}"
if [ -n "${KEYBOARD_ID}" ] ; then
  # keyboard bus and device nuber change every time the usb device is inserted
  # so use the persistent nnnn:nnnn device id to look up bus and device
  configure_keyboard
  launch_cmd+=" -device ${KEYBOARD}"
fi
if [ -n "${KEYDEV}" ] ; then
  launch_cmd+=" -device usb-storage,drive=keydev,removable=true"
  launch_cmd+=" -drive file=${IMAGE_DIR%/}/${KEYDEV},if=none,format=raw,id=keydev"
fi
launch_cmd+=" &"
}

#-----[ main script ]--------------------------------------------
separator "qemu-command-$BUILD"
checkroot
build_command
display_config
sh_countdown ${launch_wait}

old_dir=$(pwd)
cd ${IMAGE_DIR}
message "now working in $(pwd)"
separator "launch" $(hostname)
eval "${launch_cmd}"
echo
cd ${old_dir}
message "now working in $(pwd)"

# this kinda worked ... for M raspi4b, cpu cortex-a72, m 2G, smp 4
#qemu-system-aarch64 \
#  -M ${MACHINE} \
#  -cpu ${CPU} \
#  -m ${MEM} \
#  -dtb ${IMAGE_DIR%/}/${DTB} \
#  -kernel ${IMAGE_DIR%/}/${KERNEL} \
#  -drive file=${IMAGE_DIR%/}/${TARGET},if=sd,format=raw \
#  -smp ${SMP} \
#  -serial stdio -usb \
#  -append "${CMDLINE}" \
#  &

#  -sd ${IMAGE_DIR%/}/${TARGET} \
#  -initrd "${INITRD}" \
#  -device usb-mouse -device usb-kbd \
#  -drive if=pflash,format=raw,file="${KEYDEV}" \

# works - sorta --------------------------------------------------------
#qemu-system-aarch64 \
#  -M ${MACHINE} \
#  -append "${CMDLINE_OPTS}" \
#  -dtb ${DTB} \
#  -sd ${TARGET} \
#  -kernel ${KERNEL} \
#  -initrd ${INITRD} \
#  -m ${MEM} \
#  -smp ${SMP} \
#  -serial stdio  \
#  -usb -device usb-mouse -device usb-kbd

#  -sd "${TARGET}" \
#  -sd "${KEYDEV}" \

#  -cpu ${CPU} -M virt-9.0,accel=xen \
#  -cpu ${CPU} \
#  -append "rw earlycon=pl011,0x3f201000 console=ttyAMA0 loglevel=3 root=${ROOT} panic=1 rootfstype=ext4 fsck.repair=yes net.ifnames=0 rootwait" \

# old cmdline -------------------
#CMDLINE_OPTS="rw earlyprintk loglevel=8 console=ttyAMA0,115200 \
#    dwc_otg.lpm_enable=0 root=${ROOT} rootdelay=1"
