#!/bin/bash
mkdir /etc/apache2/ssl
cd /etc/apache2/ssl
echo -e "Enter a name for this certificate (host.domain):\nEx: thuvia.brendler  => "
read cert
host=$(echo $cert | cut -d'.' -f1)
domain=$(echo $cert | cut -d'.' -f2-)
echo "host: $host"
echo "domain: $domain"

openssl req \
-x509 \
-newkey rsa:4096 \
-sha256 \
-days 7200 \
-nodes \
-keyout ${cert}.key \
-out ${cert}.crt \
-subj "/CN=${cert}" \
-extensions san \
-config <( \
  echo '[req]'; \
  echo 'distinguished_name=req'; \
  echo '[san]'; \
  echo "subjectAltName=localhost,${host},${cert}")

### see apache_gen_ssl which uses this method below
#openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out $cert.key
#chmod 600 $cert.key
#openssl req -new -key $cert.key -out $cert.csr
# change days if for less than 20 yrs (haha)
#openssl x509 -req -days 7200 -in $cert.csr -signkey $cert.key -out $cert.crt

echo -e " The certificate $cert has been generated!\nPlease link it to Apache SSL website!"
ls -all /etc/apache2/ssl/
exit 0

# here's another method
# (see http://www.g-loaded.eu/2005/11/10/be-your-own-ca/ )
#openssl req -x509 -nodes -days 7200 -newkey rsa:4096 -keyout ${cert}2.key -out ${cert}2.crt

# here's how to create a CA good for 20 yrs
# cd /etc/pki/myCA
# openssl req -config openssl.my.cnf -new -x509 -extensions v3_ca -keyout private/myca.key -out certs/myca.crt -days 7200
# chmod 0400 /etc/myCA/private/myca.key
