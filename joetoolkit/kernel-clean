#!/bin/bash
# clean out old kernel residue
#
# joe brendler, 2 Aug 2014
#
#BUILD=
# if no argument provided, list installed kernel versions
# otherwise delete the residue of kernel version specified in arg
#
# include basic re-used functions checkroot(), message(), E_message(),
# and separator()
source /usr/local/sbin/script_header_brendlefly

get_yn_reply()
{
  unset reply
  while [[ ! "$reply" == "y" ]] && [[ ! "$reply" == "n" ]]
  do
    echo -n "delete $1 residual for of kernel "$2" [y/n]? " && read reply
  done
  [ "$reply" = "y" ] && return 0 || return 1
}

clean_residue()
{
  message "sources found:"
  ls -al /usr/src/linux-*$1*
  if get_yn_reply "sources" $1
  then
    message "deleting sources residual for kernel $1"
    rm -rfv /usr/src/linux-*$1*
  else
    message "Aborting at user direction"
    exit
  fi

  message "modules found:"
  ls -al /lib/modules/*$1*
  if get_yn_reply "modules" $1
  then
    message "deleting modules residual for kernel $1"
    rm -rfv /lib/modules/*$1*
  else
    message "Aborting at user direction"
    exit
  fi

  message "boot images found:"
  ls -al /boot/*$1*
  if get_yn_reply "images" $1
  then
    message "deleting images residual for kernel $1"
    rm -rfv /boot/*$1*
  else
    message "Aborting at user direction"
    exit
  fi

}

#---[ main script ]---------------------------
separator "kernel-clean-${BUILD}"

if [[ -z "$1" ]]
then
  message "listing kernel versions found..."
  message "sources:" && ls -al /usr/src/
  message "modules:" && ls -al /lib/modules/
  message "images:"  && ls -al /boot/
else
  message "cleaning residue of kernels identified by filter [$1]"
  clean_residue $1
fi
