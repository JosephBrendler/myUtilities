#!/bin/bash
source /usr/local/sbin/script_header_brendlefly
BUILD=0.0
separator "x_arg_clean_blockers-${BUILD}"
checkroot
[[ ! $1 == "go" ]] && echo "Error: provide a \"dependency confilict\" list in /home/joe/temp. Then run w argument \"go\"" && exit

blockerlist=()
blockerlist=()

cmd='emerge -avC '
# eliminate instances of " and (-)
message "clearing out \" characters"
sed -i 's/\"//g' /home/joe/temp
message "clearing out instances of \"(-)\""
sed -i 's/(-)//g' /home/joe/temp
message "clearing out instances of \"(+)\""
sed -i 's/(+)//g' /home/joe/temp

blockerlist=($(cat /home/joe/temp | grep installed | cut -d'(' -f2 | cut -d':' -f1))
#echo "-----[ cmd: $cmd ]-----"
#separator "blockerlist"
message "atoms in blockerlist: ${#blockerlist[@]}"
#echo -e "blockerlist: [\n${blockerlist[@]}\n]"

message "clearing out redundant and invalid atoms"
#separator "blockerlist2"
for x in ${blockerlist[@]}
do
  blockerlist2+=($(qatom \
    $(qatom "$x" | awk '{ print  $1"/"$2 }') \
    | awk '{ print  $1"/"$2 }'))
done
#echo "'\${#blockerlist2[@]}': ${#blockerlist2[@]}"
#echo -e "blockerlist2: [\n${blockerlist2[@]}\n]"

count=0
for z in $(for x in ${blockerlist2[@]}; do echo "$x"; done | sort -u | grep -v "unset")
do
  cmd+=" $z"
  let count++
done
message "unique blockers: ${count}"
echo
separator "clear blocker command follows"
echo "${cmd}"
sh_countdown 3
## todo - interactive prompt to run the command
#eval ${cmd}

