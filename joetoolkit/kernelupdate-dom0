#!/bin/bash
# kernelupdate-dom0 -- Joe Brendler 24 Oct 2021
# adapted from kernelupdate of 26 August 2018
# issue the sequence of commands that accomplishes a kernel update for a dom0
# 4 Apr 2022 - changed order of sequense to put copy old config after mrproper,
#   so make oldconfig has something to work with
source /usr/local/sbin/script_header_brendlefly
make0="make O=~/build/dom0"

version_number=$(file /usr/src/linux | cut -d'-' -f2)
message "version_number = ${version_number}"

dom0_config="/root/build/dom0/.config"

command_sequence=(
'echo "Old pwd: $PWD" && cd /usr/src/linux && pwd'
'nodist_path && echo $PATH'
'mount /boot/ 2>/dev/null; ls -al /boot/'
'${make0} mrproper'
'zcat /proc/config.gz > ${dom0_config}'
'${make0} oldconfig'
'${make0} menuconfig'
'${make0} && ${make0} modules_install install'
)

#-----[ functions ]--------------------------------------------------
nodist_path() { export PATH=$(echo $PATH | sed 's|/usr/lib/distcc/bin:||' | sed 's|/usr/lib/ccache/bin:||'); }

new_prompt()        # set external variable $answer based on reponse to prompt $1
{ ps=$1; echo; echo; CUU; SCP; message_n "$ps [Yes/no/skip|Yns]: " && read answer; # '=~' not in busybox
while ! expr "${answer:0:1}" : [yYnNsS] >/dev/null;  # answer not a regex match
do RCP; echo -en "$(repeat ' ' $(termwidth))";  ## blank the line
RCP; message_n "$ps [Yes/no/skip|Yns]: " && read answer; done; }

#-----[ main script ]------------------------------------------------
separator "kernelupdate-dom0"

answer=""
prompt "Did you remember to ${BMon}eselect kernel set <n>${Boff}?"
[[ ! $answer == [Yy] ]] && exit
for ((i=0; i<${#command_sequence[@]}; i++))
do
  answer=""
  new_prompt "Are you ready to run \"${command_sequence[i]}\"?"
  case $answer in
    [Yy] )  # execute this command and continue
      message_n "${LBon}About to run \"${BYon}${command_sequence[i]}${LBon}\"...${Boff}" ; \
      eval ${command_sequence[i]}; right_status $? ;;
    [Ss] ) ;; # skip this command and continue
    *    )  # abort due to negative answer
      message "Not running \"${command_sequence[i]}\". Quitting..." ; \
      exit ;;
  esac
done
