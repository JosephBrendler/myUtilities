#!/bin/bash
#
# eqds - recursive script to identify dependencies (why is this on my system?)
#
source script_header_brendlefly

dep_count=0
  # store dep_list of dependencies in an array
dep_list=("")
  # to display the contents of the array, echo ${dep_list[@]}
  # the result should be an orderly list(string) of elements
  # each separated by the IFS field separation character (normally one space)
depth=0

list_deps() {
  # output to stdout
  local subj=$1
  local x=""
  for x in $(equery d $subj | cut -d' ' -f1)
  do
    # decompose package name into fields, pick name only
    qatom $x | cut -d' ' -f2
  done
}

list_installed_deps() {
  # output to stdout
  local subj=$1
  local z=""
  for z in $(list_deps $subj)
  do
    # name only, installed only
    eix -#I $z
  done

}

in_list() {
  # echo the position in ${dep_list[]}, if present; echo "" otherwise
  local i=0
  local subj=$1
#  message "running for loop from 0 to ${#dep_list}"
  for ((i=0; i<${#dep_list[@]}; i++))
  do
#    message "      comparing input [$1] to dep_list[$i]: ${dep_list[i]}"
    if [[ "$subj" == "${dep_list[i]}" ]]
    then
#      message "        result: true"
      echo $i
      return
#    else
#      message "        result: false"
    fi
  done
  echo ""
  return
}

eqd_func() {
  local subj=$1
  local list_str=""
  let "depth+=1"
  local z=""
  for z in $(list_installed_deps $subj)
  do
    # if not already in dep_list, put in dep_list and look for its deps
    result=$(in_list $z)
    message "$(repeat ' ' $depth)${LBon}In eqd_func at depth [${BWon}$depth${LBon}], Looking for candidate [${BWon}$z${LBon}] in list; result: [${BGon}$result${LBon}]${Boff}"
    if [[ "$result" == "" ]]
    then
      # zero based index, the ith element is at position i-1
      dep_list[$dep_count]=$z
      let "dep_count+=1"
      list_str="${dep_list[@]}"
      message "$(repeat ' ' $depth)  ${BRon}>>> added ${BGon}$z ${BRon}to dep_list: [${BYon}${list_str}${BRon}] which now has [${BYon}$dep_count${BRon}] elements${Boff}"
      echo "${list_str}" > /home/joe/dep_list
      message "$(repeat ' ' $depth)  ${BBon}Now recursing to look for dependencies of [ ${BWon}$z${BBon} ]${Boff} "
      eqd_func $z
    else
      message "$(repeat ' ' $depth)  ${BRon}xxx candidate [${BGon}$z${BRon}] was already in dep_list at position [${BYon}$result${BRon}]${Boff}"
    fi
  done
  let "depth-=1"
  message "$(repeat ' ' $depth)${LBon}Returning from eqd_func to depth: [${BYon}$depth${LBon}]${Boff}"
}

#---[ main script ]---
eqd_func $1
echo
list_as_str="${dep_list[@]}"
message "Here's the complete dep_list of dependencies: ${list_as_str}"


#list_installed_deps $1
#dep_list=("one two three")
#in_list "two"
#in_list "four"

