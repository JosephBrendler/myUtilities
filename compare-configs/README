kernel comparison utility. 
I've "zero'd" the ownership to "nobody" so I can email it to you.  On my
system, I built it as root, and I've only run it as root... don't know
if it would work if you build and run it as your non-root user.

you should be able to extract by putting it with 
# tar -xvzpf compare-configs.tar.gz
and then changing ownership with
# chown -R root:root compare-configs

inside the compare-configs directory, you'll find a concept-script for
comparing kernel configs (which does something similar but takes a long
time to run) and three subdirectories:
(1) colorHeader/ contains colorHeader.h (a bunch of #define statements
for the ascii stuff, used by both the Terminal and KernelConfig code)
(2/3) Terminal/ and KernelConfig/ contain the code (.h .cpp and
Makefile) for each of the two class libraries

First, go into the Terminal/ directory, where you'll notice that the
Makefile will also build a test program called terminalLibTest.cpp ...
go 
# cd Terminal/   and run  
# make && make install 
... and then you should be able to run 
#./terminalLibTest 
(that should confirm that the shared object file is properly built and 
installed in /usr/lib/)

Then go into the KernelConfig/ directory and again run 
# make && make install 
... here, instead of running a test program, you should then be
able to run 
# compareConfigs <path/to/config1> <path/to/config2>

for convenience, I've adopted the practice of archiving every config to
/home/joe/kernel_configs/ ... so, since the binary executable is
installed by make install into /root/bin/ (in my $PATH), I just cd to
/home/joe/kernel_configs/ and avoid having to supply the path as an
argument to compareConfigs

I think I included the pre-compiled executables in the tar.gz ... so if
the Makefiles don't work for you for some reason, you might still be
able to get it running by simply copying the two .so files to /usr/lib
and the compareConfig executable to somewhere in your $PATH

