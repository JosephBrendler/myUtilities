kernel comparison utility. 
On my system, I built it as root, and I've only run it as root... don't know
if it would work if you build and run it as your non-root user.

If you use the legacy archive, you should be able to extract it with 
# tar -xvzpf compareConfigs.tar.gz
and then changing ownership with
# chown -R root:root compareConfigs

inside the compareConfigs directory, you'll find a concept-script for
comparing kernel configs (which does something similar but takes a long
time to run) and some other subdirectories:
(1) colorHeader/ contains colorHeader.h (a bunch of #define statements
for the ascii stuff, used by both my "Terminal" shared object code and
by the KernelConfig shared object code.
(2) KernelConfig/ contains the code (.h .cpp and Makefile) for the
class library for the KernelConfig shared object employed by the 
"compareConfigs" program
(Note) Both the compareConfigs program and the KernelConfig class
also depend on the Terminal shared object (class library) the source code
for which should be found in ../Terminal (i.e. a sibling directory to the
compareConfigs directory in which you've found this README

To build the compareConfigs utility:
First, cd to the Terminal/ directory, and build and install libTerminal.so
use "make clean" first, if necessary.  Notice that the Makefile will also
build a test program called terminalLibTest.cpp 
  # cd Terminal/
  # make && make install 
You should be able to run 
  #./terminalLibTest 
(which should confirm that the libTerminal.so is properly built and 
installed in /usr/lib/)

Then cd to the KernelConfig/ directory and again run 
  # make && make install 
(Again, run "# make clean" first if necessary)
This should build and install the libKernelConfig.so shared object 
library in /usr/lib/, and instead of also building a test program, 
it will build the compareConfigs executable utility.
Copy the compareConfigs executable to some location in your $PATH, and
you should then be able to run 
  # compareConfigs <path/to/config1> <path/to/config2>

For convenience, I've adopted the practice of archiving a copy of every
.config to a kernel_configs/ subdirectory of my $HOME. Then to save
typing, I first cd to that directory and then run
  # compareConfigs <config1> <config2>
(and avoid having to supply the path as part of the arguments)
