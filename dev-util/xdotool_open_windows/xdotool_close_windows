#!/bin/bash
source /usr/sbin/script_header_joetoo

#-----[ initialize variables ]-------------------------------------------------
PN=$(basename $0)

user=joe

logFile="/home/${user}/xdotool_close_windows.log"

config_dir="/etc/xdotool_open_windows"
build_file=$"${config_dir}/BUILD"

sleepWait=0.1
VERBOSE=$TRUE
verbosity=4

message_n "sourcing build_file: ${build_file} ..."
[[ -f ${build_file} ]] || die "${build_file} does not exist"
source ${build_file} || die "failed to source ${build_file}"
right_status $?

rm $logFile

exec 6>&1 2>/dev/null           # Link file descriptor #6 with stdout. Saves stdout.
exec > $logFile  2>/dev/null    # stdout replaced with file.
# ----------------------------------------------------------- #
# All output from commands in this block sent to file $logFile
separator "${PN}-${BUILD}" "(closing)"
message "Exterminating any rogue xdotool_xxx process..."
pids=($(ps -aef | grep xdotool_ | grep -v 'color=auto' | grep -v $! | awk '{print $2}'))
message "Found ${#pids[@]} xdotool_xxx processes..."
for x in ${pids}
do
  message "killing process x=${x}"
  kill -9 $x 2>/dev/null
done
x=""

my_window=$(xdotool getactivewindow)
message "my_window: ${my_window}"
num_desktops=$(xdotool get_num_desktops)
message "num_desktops: $num_desktops"

window_list=()
window_list=($(xdotool search --any lxterminal 2>/dev/null))
window_list+=($(xdotool search --any Konsole))
window_list+=($(xdotool search --any xterm 2>/dev/null))
message "Current window list:"
echo ${window_list[@]}
echo
message "Now closing all terminal windows except my_window [${my_window}] ..."


for win in ${window_list[@]}
do
    desktop=$(xdotool get_desktop_for_window $win 2>/dev/null)
    message_n "Examining window [ $win ] on desktop [ $desktop ] ... "
    if [[ $win -ne $my_window ]]
    then
        xdotool windowclose $win 2>/dev/null && echo "closed" || \
            echo "tried, but failed to close"
    else
        echo "my_window; skipping"
    fi
    sleep $sleepWait
done

# now kill any residual ssh sessions
message "Exterminating any rogue ssh processes ..."
filter="grep -v 'ssh-agent' | grep -v 'sshd' | grep -v 'grep'"
pids=($(eval "ps -aef | grep ssh | ${filter} | awk '{print \$2}'"))
message "Found ${#pids[@]} ssh processes..."
for x in ${pids}
do
  message "killing process x=${x}"
  kill -9 $x 2>/dev/null
done
x=""

# move the active window to desktop 0, if it isn't already there
my_window=$(xdotool getactivewindow)
message "my_window: ${my_window}"
my_desktop=$(xdotool get_desktop_for_window ${my_window})
message "my_desktop: ${my_desktop}"
if [[ ${my_desktop} -eq 0 ]]
then
  message "my_window [${my_window}] is already on desktop 0; no action required"
else
  message "moving my_window [${my_window}] to desktop 0 ..."
  xdotool set_desktop_for_window ${my_window} 0
fi

exec 1>&6 6>&-  2>/dev/null     # Restore stdout and close file descriptor #6.

cat $logFile
