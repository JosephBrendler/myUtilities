#!/bin/bash
# installU -- install a domU tarball and extract it
# Joe Brendler -- unk date
# rev 11 Nov 14 -- overhaul
# TODO: 1 - ensure target domU is not running, mount image at target, do copy as below, then umount target
#       2 - sanity checks (root user, in a linux sources directory not the symlink)

source /usr/sbin/script_header_joetoo

#---[ local variables ]-------------------------------------------------------
BUILD="0.0.3 (20241109)"
image_dir="/home/joe/xen/xen.images"
target="/mnt/xen/gentoo"
#kernel_image_dir="/root/build/domU_kernel_images"
kernel_image_dir="/home/joe/My_domU_project/domU_kernel_images"
#distrib_boot_dir="/root/build/domU/tmp/distrib/boot"
distrib_dir="/home/joe/My_domU_project/build/domU/tmp/distrib/"
distrib_boot_dir="/home/joe/My_domU_project/build/domU/tmp/distrib/boot/"
VERBOSE=$TRUE
#VERBOSE=$FALSE
verbosity=2

image_list=(
'euler'
'gauss'
)

# gentoo_pv_kernel_image

#---[ main script ]-----------------------------------------------------------
separator "installU_inImageFile-${BUILD}"
checkroot

# identify current working version to be installed
#indx=`expr index "$PWD" "-"`
#version=${PWD:${indx}}
#version_number=${version:0:$(($(expr index "$version" "-")-1))}
#version_number=$(file /usr/src/linux | cut -d'-' -f2)

message "determining version number..."
d_message "  moving to /usr/src/linux..." 1
old_dir=${PWD}
cd /usr/src/linux
d_message "  confirming PWD is now ${PWD}..." 1
version_number=$(make kernelversion | sed 's|gentoo-||')
message "  calculated version_number = [${version_number}]"
cd ${old_dir}
d_message "  confirming return - PWD is now ${PWD}" 1
echo
message "preparing to install linux-domU_kernel_image-${version_number} in listed images..."
for ((i=0; i<${#image_list[@]}; i++))
do
  message "  ${image_list[$i]}"
done
message "---------"
echo
message "stopping xendomains if needed"
/etc/init.d/xendomains stop
echo

for (( i=0; i<${#image_list[@]}; i++))
do
  separator "${image_list[$i]}" "installing to vm: "

  message "mounting ${image_dir%/}/${image_list[$i]}/xenU.${image_list[$i]}.img on ${target%/}/"
  mount ${image_dir%/}/${image_list[$i]}/xenU.${image_list[$i]}.img ${target%/}/

  message "copying ${distrib_dir%/}/linux-domU_kernel_image-${version_number}.tar.bz2 to ${target%/}/"
  cp -v ${distrib_dir%/}/linux-domU_kernel_image-${version_number}.tar.bz2 ${target%/}/

  d_message "changing directory to: [ ${target} ]" 1
  old_dir=${PWD}
  cd ${target}
  d_message "confirming present working directory: [ ${PWD} ]" 1

  message "deploying tarball linux-domU_kernel_image-${version_number}.tar.bz2 ..."
  tar xvpjf linux-domU_kernel_image-${version_number}.tar.bz2   #extract
#  tar tvpjf linux-domU_kernel_image-${version_number}.tar.bz2  #test - list contents

  d_message "changing directory to: [ ${old_dir} ]" 1
  cd ${old_dir}
  d_message "confirming present working directory: [ ${PWD} ]" 1

  echo
  msg="${BGon}Installed linux-domU_kernel_image-${version_number} to target: "
  msg+=" ${image_dir%/}/${image_list[i]}/xenU.${image_list[i]}.img${Boff}"
  message "${msg}"

  message "unmounting ${target}"
  umount ${target}
  echo
done

message "Installing Vm kernel on xen host $(hostname) at ${kernel_image_dir%/}/"
cp -av ${distrib_boot_dir%/}/* ${kernel_image_dir%/}/

message "Updating symlink to Vm kernel for xen pv configs"

cd ${kernel_image_dir}
ln -snf vmlinuz-${version_number}-gentoo vmlinuz
cd ${old_dir}

message "Listing contents of ${kernel_image_dir}"
ls -al ${kernel_image_dir%/}/

message "${BRon}Note: you may want to restart xendomains with ${BGon}/etc/init.d/xendomains start${Boff}"
