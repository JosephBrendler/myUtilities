source /usr/sbin/script_header_joetoo

PN=$(basename $0)

usage() {
    E_message "usage: ${PN} [-][-][sS]"
    E_message "options:"
    E_message "   s - include leading and trailing separators"
    E_message "   (no other options or arguments are allowed)"
    exit 1
}

get-model() {
    # look up model for board name
    local board=$1
    case ${board} in
        "bcm2708-rpi-b"                   ) model="Raspberry Pi Model B Rev 2" ;;
        "bcm2709-rpi-2-b"                 ) model="Raspberry Pi 2 Model B Rev 1.1" ;;
        "bcm2710-rpi-3-b"                 ) model="Raspberry Pi 3 Model B Rev 1.2" ;;
        "bcm2710-rpi-3-b-plus"            ) model="Raspberry Pi 3 Model B Plus Rev 1.3" ;;
        "bcm2711-rpi-4-b"                 ) model="Raspberry Pi 4 Model B Rev 1.1" ;;
        "bcm2711-rpi-cm4-io"              ) model="Raspberry Pi Compute Module 4 Rev 1.1" ;;
        "bcm2712-rpi-5-b"                 ) model="Raspberry Pi 5 Model B Rev 1.0" ;;
        "bcm2712-rpi-cm5-cm5io"           ) model="Raspberry Pi Compute Module 5 Rev 1.0" ;;
        "rk3288-tinker-s"                 ) model="ASUS Tinker S (retired)" ;;
        "rk3399-rock-pi-4c-plus"          ) model="Radxa ROCK Pi 4C+" ;;
        "rk3399-rock-4se"                 ) model="Radxa ROCK 4SE" ;;
        "rk3399-tinker-2"                 ) model="ASUS Tinker 2 (retired)" ;;
        "rk3588-rock-5b"                  ) model="Radxa ROCK 5B" ;;
        "rk3588-radxa-rock-5b+"           ) model="Radxa ROCK 5B+" ;;
        "rk3588s-orangepi-5"              ) model="Orange Pi 5" ;;
        "rk3588s-orangepi-5b"             ) model="Orange Pi 5B" ;;
        "rk3588s-rock-5c"                 ) model="Radxa ROCK 5C" ;;
        "fsl-imx8mq-phanbell"             ) model="Freescale i.MX8MQ Phanbell (CoralDev/TinkerEdgeT)" ;;
        "meson-gxl-s905x-libretech-cc-v2" ) model="Libre Computer AML-S905X-CC V2 (SweetPotato)" ;;
        "meson-sm1-s905d3-libretech-cc"   ) model="Libre Computer AML-S905D3-CC Solitude" ;;
        "meson-g12b-a311d-libretech-cc"   ) model="Libre Computer AML-A311D-CC Alta" ;;
        "generic-armv6j"                  ) model="generic-armv6j" ;;
        "generic-armv7a"                  ) model="generic-armv7a" ;;
        "generic-aarch64"                 ) model="generic-aarch64" ;;
        "generic-amd64"                   ) model="generic-amd64" ;;
    esac
    echo "${model}"
}

get-longest() {
    # return the number of characters in the longest element of space-delimitted input strings
    local longone=0
    while [ $#  -gt 0 ] ; do
        [ ${#1} -gt $longone ] && longone=${#1}
        shift
    done
    echo $longone
}

#-----[ script ]--------------------------------------------------
[ $# -gt 1 ] && usage
[ $# -eq 1 ] && [[ "${1:0:1}" != [sS] ]] && usage

[[ "${1:0:1}" == [sS] ]]  && separator $(hostname) ${PN}

# find the most recent sbc-headless-meta ebuild (find, sort by timestamp, pick last)
SEARCH_TERM="sbc-headless-meta"
SEARCH_DIR="/var/db/repos/joetoo/"
TARGET_EBUILD=$(find ${SEARCH_DIR} -iname "*${SEARCH_TERM}*.ebuild" -type f  -printf "%T@ %p\n" | \
    sort -n | tail -1 | cut -d' ' -f2)

# source this ebuild to evaluate is IUSE variable
source ${TARGET_EBUILD}

BOARD_LIST=()
# read only board names into BOARD_LIST() array
for x in $IUSE; do
    # ignoring the first character if it is a "+" or "-"
    case ${x#[+-]} in
        "innercore"|"gpio"|"joetoo"|"boot-fw"|"kernelimage") : ;; # do nothing
        * ) BOARD_LIST+=("${x}") ;;
    esac
done

# identify longest string
longest=$(get-longest ${BOARD_LIST[@]})

# dump BOARD_LIST
for ((i=0; i<${#BOARD_LIST[@]}; i++)); do
    board="${BOARD_LIST[${i}]}"
    pad=$(repeat "." $(( ${longest} + 1 - ${#board} )))
    echo -n "  ${board} ${pad}("
    model="$(get-model ${board})"
    echo "${model})"
done

[[ "${1:0:1}" == [sS] ]]  && separator $(hostname) ${PN}

