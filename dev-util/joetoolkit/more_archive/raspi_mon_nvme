#!/bin/bash
source /usr/local/sbin/script_header_brendlefly
BUILD=0.0

#-----[ functions ]----------------------
usage() {
  E_message "Error; bad argument(s)"
  message "  ${BYon}Usage: ${BGon}raspi_mon [q]${Boff}"
  message "  ${LBon}q = quiet (no separator; e.g. ${BGon}watch raspi_mon q${Boff}"
  exit 1
}

#-----[ main script ]--------------------
[[ $# -gt 1 ]] && usage

#separator "raspi_cpu_temp-$BUILD"

# measure temperature in millicelcius; convert to degrees celcius and farenheit
rawC="$(cat /sys/class/thermal/thermal_zone0/temp)"
tempC=$(bc <<<"scale=1; ${rawC}/1000")
tempF=$(bc <<<"scale=1; (($tempC / 5.0) * 9.0) + 32.0")

echo "Temp: $tempC C"
echo "Temp: $tempF F"
echo

# measure frequency in herz, three ways; convert to Mhz
raw_pfreq=$(cat /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq)
raw_ifreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq)
raw_sfreq=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq)
pfreq=$(bc <<<"scale=2; ${raw_pfreq}/1000000")
ifreq=$(bc <<<"scale=2; ${raw_ifreq}/1000000")
sfreq=$(bc <<<"scale=2; ${raw_sfreq}/1000000")

echo "Cur policy  freq: $pfreq Mhz"
echo "Cur cpuinfo freq: $ifreq Mhz"
echo "Cur scaling freq: $sfreq Mhz"

nvme_model="$(cat /sys/class/nvme/nvme0/model)"
nvme_state="$(cat /sys/class/nvme/nvme0/state)"
nvme_uevent="$(cat /sys/class/nvme/nvme0/uevent)"

echo
echo "NVMe information from /sys/class/nvme/nvme0/"
echo "  model...: ${nvme_model}"
echo "  state...: ${nvme_state}"
echo "  uevent..."
for x in $(echo ${nvme_uevent})
do
  var=$(echo $x | cut -d'=' -f1)
  val=$(echo $x | cut -d'=' -f2)
  echo "    ${var}: ${val}"
done
