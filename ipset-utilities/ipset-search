#!/bin/bash
# scan ipsets for filter arg

source /usr/local/sbin/script_header_brendlefly
DEBUG="true"
BLANK_LINE=$(repeat " " $(termwidth))
BUILD="0.0.1a (20160221)"

#---[ my local functions ]--------------------
checkarg()
{
  [ ! "$1" == "" ] && SEARCH_PATTERN=$1 || exit_bad_args
}

exit_bad_args()
{
  E_message "Error: you must supply at least a search pattern (ip address) as arg1.  You may also name an ipset as arg2 to limit your search."
  exit 1
}

#---[ main script ]--------------------------
checkroot
CLR
CUP 1 1
checkarg $1

## Search just one ipset if it is named by argument $2
[ ! "$2" == "" ] && TARGET_LIST="$2" || TARGET_LIST="$(ipset list -n | sort)"
# [ "$DEBUG" == "true" ] && message "TARGET_LIST = [${TARGET_LIST}]"

separator "ipset-search-$BUILD looking for $SEARCH_PATTERN"

ipset destroy TEMP_IPSET -q
ipset create TEMP_IPSET hash:net

#for TARGET in $(ipset list -n | sort)
for TARGET in ${TARGET_LIST}
do
#  [ "$DEBUG" == "true" ] && SCP && echo -en "${BLANK_LINE}" && RCP && echo -en ${BGon}*${Boff}" looking for $SEARCH_PATTERN in $TARGET" && RCP
  for i in $(ipset list "$TARGET" | grep "\.")
  do
    ipset flush TEMP_IPSET -q
    ipset add TEMP_IPSET $i
    ipset test TEMP_IPSET $SEARCH_PATTERN -q
    result="$?"
    [ "$result" -eq "0" ] && SCP && echo -en "${BLANK_LINE}" && RCP && echo -en ${SEARCH_PATTERN}${BGon}" IS"${Boff}" in "${TARGET}" range "${i} && echo
    [ "$result" -ne "0" ] && [ "$DEBUG" == "true" ] && SCP && echo -en "${BLANK_LINE}" && RCP && \
                             echo -en ${SEARCH_PATTERN}" is "${BRon}"NOT"${Boff}" in "${TARGET}" range "${i} && RCP
  done
done

ipset destroy TEMP_IPSET -q
SCP && echo -en "${BLANK_LINE}" && RCP && message "ipset-search complete"
