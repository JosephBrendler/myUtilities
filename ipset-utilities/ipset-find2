#!/bin/bash
# determine which ipset(s) match search criteria
# Joe Brendler, 2 Nov 14

source /usr/local/sbin/script_header_brendlefly
BUILD="0.0.01"

#DEBUG="true"
DEBUG="false"

useage()
{
  echo -e "${BGon}Useage:  ${Boff}ipset-find <search_criterion>"
  echo -e "${BBon}Example: ${Boff}ipset-find '^192.'"
}

network()
{
  echo $( ipcalc -b 207.241.148.80/20 | grep "Network" | sed 's/  */ /' | cut -d' ' -f2 | cut -d'/' -f1 )

}

#---[ main script ]-------------------------------
checkroot

[ -z "$1" ] && useage && exit 1

separator "ipset-find-${BUILD}"

message "Searching ipsets for: [ $1 ]"
# ipsets named "ipdeny" and "*_set" are of type list:set (ignore these)
#for i in suspicious allow_gentoo
for i in $(ipset list -n | grep -v "_set" | grep -v "ipdeny" )
do
  echo -e "---[ $i ]-------"
  [ "${i:0:5}" == "allow" ] && status_color="${BGon}" || status_color="${BRon}"
  ipset list $i | while read j
  do
    if [[ ${j:0:1} =~ [[:digit:]] ]]   # ignore non-numeric lines
    then
      NETWK=$( echo $j | cut -d'/' -f1)
      CIDR=$( echo $j | cut -d'/' -f2)
      [ -z "$CIDR" ] && CIDR=24
      [ "${DEBUG}" == "true" ] && message "NETWK: $NETWK, CIDR: $CIDR"
      [ "${DEBUG}" == "true" ] && message "network \$1 \$CIDR: $(network $1 $CIDR)"
      [ "$(network $1 $CIDR)" == "${NETWK}" ] && \
      echo -e ${status_color}">>> "${Boff}$1 belongs to ${j}${status_color}" <<<"${Boff} 
    fi
  done
done
