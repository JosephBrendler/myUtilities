
Note:  joetoo layout for rockchip boards is based on what ASUS ships with software
      developed for the TinkerEdgeT and Google Coral Dev boards

    - Download an OS image from -
**    https://tinker-board.asus.com/download-list.htm   
      (select "Tinker Edge T" from drop-down box and be *patient* , then extract the zip)
      ( or download from --
      https://www.asus.com/AIoT-Industrial-solutions/Tinker-Edge-T/HelpDesk_Download/
**    (this project used Tinker_Edge_T-Mendel-Eagle-V3.0.7-20210610)
    - the Google Coral Dev board is very similar and some of this instruction is clearer --
    - https://coral.ai/docs/dev-board/get-started/#requirements
    - https://coral.googlesource.com/docs/+/refs/heads/master/GettingStarted.md

    - Coral and ASUS's instructions are to use the proprietary "flash.cmd" or "flash.sh"
      program to write a Mendel linux system to the board's eMMC, but you can write the
      provided "sdcard_arm64.img" using balena etcher and set DIP swithces 1011
      to boot from that sd card instead.
    - this project used that sd card layout and replaced the Mendel rootfs with gentoo
    - thus --
        - this image is built with a dos partition table
        - the first (128MiB ext2) partition begins at sector 16384 and is mounted at /boot
        - the second (4G ext4) partition begins at sector 278528 (immediately after the first)
          and is mounted at /
        - you can manipulate the layout used for your board with dev-sbc/crossbuild-tools
          cb-mkdev (which calls cb-layout-device according to user-maintained config file)

u-boot Notes:
    - the "flash.sh" program is also essentially "u-boot_reflash_resources"
    - NXP's i.mx8 u-boot is pre-installed in downloaded .img files,
      but this may also be useful --
    - https://solidrun.atlassian.net/wiki/spaces/developer/pages/287179471/i.MX8M+ATF+U-Boot+and+Linux+Kernel
