#!/bin/bash
#
# buildtarget-qemu
#

source /usr/local/sbin/script_header_brendlefly
VERBOSE=$TRUE
verbosity=3

TARGET=""
ARCH=""

usage() {
    message "${BRon}usage: ${BGon}quickpkg-toolchain <TARGET>${Boff}"
    message "${BYon}  Note: exactly one argument <TARGET> is required. Examples:${Boff}"
    message "    aarch64-unknown-linux-gnu"
    message "    armv6j-unknown-linux-gnueabihf"
    message "    armv7a-unknown-linux-gnueabihf"
    exit
}

validate_target() {
    case $TARGET in
        "aarch64-unknown-linux-gnu" )
            d_message "valid target: [${TARGET}]" 2 ;
            ARCH="arm64" ;
            ;;
        "armv6j-unknown-linux-gnueabihf" )
            d_message "valid target: [${TARGET}]" 2 ;
            ARCH="arm" ;
            ;;
        "armv7a-unknown-linux-gnueabihf" )
            d_message "valid target: [${TARGET}]" 2 ;
            ARCH="arm" ;
            ;;
        * )
            E_message "invalid target: [${TARGET}]" ;
            usage ;;
    esac
}

#-----[ main script ]---------------------------------------------
checkroot
separator $(basename $0) $(hostname)
[ $# -ne 1 ] && usage
TARGET=$1
validate_target

old_dir="$(pwd)"
cd /usr/${TARGET}
message "now working in target sysroot directory: [${Mon}$(pwd)${Boff}]"

message "building qemu for ${TARGET} ..."
QEMU_USER_TARGETS="${ARCH}" QEMU_SOFTMMU_TARGETS="${ARCH}" USE="static-user -plugins static-libs" emerge --ask --buildpkg --oneshot qemu
right_status $?
message "installing qemu binary in ${TARGET} ..."
ROOT=/usr/${TARGET}/ emerge --ask --usepkgonly --oneshot --nodeps qemu
right_status $?

# set up for rust-std [NOTE: this doesn't really work yet]
if [ -z "$(grep -iR rust-src /etc/portage/package.use/)" ] ; then
    # there is no rust-src USE in package.use, so add it
    message_n "adding USE rust-src to package.use ..."
    echo "dev-lang/rust rust-src" >> /etc/portage/package.use/joetoo && \
    echo "dev-lang/rust-bin rust-src" >> /etc/portage/package.use/joetoo
    right_status $?
fi
if [ -z "$(grep 'LLVM_TARGETS' /etc/portage/make.conf)" ] ; then
    # there is no LLVM_TARGETS entry in make.conf, so add it
    message_n "adding LLVM_TARGETS to make.conf ..."
    echo "AArch64 AMDGPU ARM AVR BPF Hexagon Lanai LoongArch MSP430 Mips NVPTX PowerPC RISCV Sparc SystemZ VE WebAssembly X86 XCore" >> /etc/portage/make.conf
    right_status $?
fi
echo
message "double-check make.conf and package.use, and then rebuild rust and llvm"
message "  with rust-src/LLVM_TARGETS configuration (run emerge -uavDN world)"
E_message "  Note: as of 15 April 2025, this doesn't really work"
echo
message_n "creating rust-std link in crossdev repo ..."
cd /var/db/repos/crossdev/cross-${TARGET} && \
ln -s /var/db/repos/gentoo/sys-devel/rust-std
right_status $?
message_n "unmasking rust-std in package.accept_keywords ..."
echo "cross-${TARGET}/rust-std **" >> /etc/portage/package.accept_keywords/cross-target-rust-std
right_status $?

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
