#!/bin/bash
#
# populate-target   (c) joe.brendler  2025-2072
# copy appropriate template files into crossbuild target filesystem
#

source /usr/sbin/script_header_joetoo
message_n "sourcing BUILD ..."
source /etc/crossbuild-tools/BUILD ; right_status $?
message_n "sourcing BPN ..."
source /etc/crossbuild-tools/BPN ; right_status $?
source /usr/sbin/script_header_joetoo_extended

VERBOSE=$TRUE
#verbosity=2
verbosity=3

PN=$(basename $0)

message_n "sourcing cb-common-functions ..."
source /usr/sbin/cb-common-functions ; right_status $?
TARGET=""

usage() {
    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
    smaller_script_common_usage_message
    exit 1
}

cleanup-crossdev-environment() {
    # inspect target (mount point) - is anything mounted? (un-mount)
    # (moved to cb-umount, called by cb-mkenv0

    # examine ${BOARD}.img - ask what to do with it
    if [ -f /usr/${BOARD}.img ] ; then
        d_message "INTERACTIVE: $(status_color $INTERACTIVE)$(TrueFalse $INTERACTIVE)${Boff}" 3
        if [[ $INTERACTIVE ]] ; then
            msg="${BYon}Do you want to delete image file /usr/${BOARD}.img ?\n"
            msg+="     y: delete | s: no, but continue cleanup | n: no, and exit now"
            response="" ; new_prompt "${msg}"
        else
            response="s"  # take the safe course. don't non-interactively destroy stuff
        fi
        case ${response:0:1} in
            [yY] ) message_n "deleting /usr/${BOARD}.img ..." ;
                   rm /usr/${BOARD}.img && right_status $? || ( right_status $? && exit 1 ) ;;
            [sS] ) message "OK; no action; continuing" ;;
            [nN] ) E_message "Exiting as instructed [ ${response} ]" ; exit 1 ;;
            * ) E_message "Invalid response; exiting" ; exit ;;
        esac
    else
        message "no /usr/${BOARD}.img file exists ; continuing"
    fi

    # use crossdev -C to cleanup crossdev crosscompiler and its TARGET directory

    message "${BYon}Cleaning up crossdev cross-compiler and environment /usr/${TARGET} ..."
    message "if asked, remove target tree by responding ${BMon}y${Boff} to the ${BYon}remove-recursive?${Boff} question"
    crossdev -C -t ${TARGET} ; right_status $?

    return 0
}

#-----[ main script ]---------------------------------------------
checkroot
separator ${PN} $(hostname)
[ $# -ne 1 ] && usage
BOARD=$1
validate_target ${BOARD} || die "Failed to validate_target [${BOARD}]"

old_dir="$(pwd)"
cd /usr/
message "now working in parent of crossbuild target directory: [${Mon}$(pwd)${Boff}]"

cleanup-crossdev-environment || die "Failed to cleanup-crossdev-environment"

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
exit 0
