#!/bin/bash
#
# draft command to transfer a system image file (presumably created as a sparse file)
# using rsync so that the destination file will also be such a sparse file
# (scp does not do so)
# Notes:
#    -a preserves ownership and permissions
#    -z uses compression for transmission
#    -P combines --partial and --progress options
#        --progress shows real-time transfer progress
#        --partial is "keep partial" so that you can issue the same command again
#            if the transfer was interrupted (i.e. makes it "resumable")
#    --sparse instructs rsync to create a sparse destination file
#    --stats will print statistics after job completion
#
PN=$(basename "$0")
user="joe"
dest_hostname="gmki91"

if [ ! $# -eq 2 ] ; then
    echo "Usage: ${PN} <source> <destination>"
    echo "source like /home/${user}/sbc-stockpile/*"
    echo "destination like ${user}@${dest_hostname}:/home/${user}/sbc-stockpile/"
    exit 1
fi

# assign source and destination to commandline input, with defaults for safety
source="${1:-/home/${user}/sbc-stockpile/\*}"
destination="${2:-${user}@${dest_hostname}:/home/${user}/sbc-stockpile/}"

declare -a COMMAND=(
    rsync
    -aPz
    --sparse
    --stats
    "${source}"      # Quoting here preserves the source argument exactly.
    "${destination}" # Quoting here preserves the destination argument exactly.
)

# double-chech before doing it
echo "about to run: "
printf '    %s\n' "${COMMAND[@]}"
confirm_continue_or_exit

# run it
"${COMMAND[@]}"
