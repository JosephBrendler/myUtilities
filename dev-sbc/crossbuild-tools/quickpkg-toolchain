#!/bin/bash
#
# quickpkg-toolchain   joe brendler 14 April 2025
#
# run this to build binary packages of the crossbuild toolchain on the host system
#   (i.e. cross-${TARGET}/gcc, etc.)
#
source /usr/local/sbin/script_header_brendlefly
VERBOSE=$TRUE
verbosity=3

TARGET=""

toolchain=(
'gcc'
'glibc'
'binutils'
'linux-headers'
)

usage() {
    message "${BRon}usage: ${BGon}quickpkg-toolchain <TARGET>${Boff}"
    message "${BYon}  Note: exactly one argument <TARGET> is required. Examples:${Boff}"
    message "    aarch64-unknown-linux-gnu"
    message "    armv6j-unknown-linux-gnueabihf"
    message "    armv7a-unknown-linux-gnueabihf"
    exit
}

validate_target() {
    case $TARGET in
        "aarch64-unknown-linux-gnu" )
            d_message "valid target: [${TARGET}]" 2 ;
            ;;
        "armv6j-unknown-linux-gnueabihf" )
            d_message "valid target: [${TARGET}]" 2 ;
            ;;
        "armv7a-unknown-linux-gnueabihf" )
            d_message "valid target: [${TARGET}]" 2 ;
            ;;
        * )
            E_message "invalid target: [${TARGET}]" ;
            usage ;;
    esac
}

#-----[ main script ]---------------------------------------------
checkroot
separator $(basename $0) $(hostname)
[ $# -ne 1 ] && usage
TARGET=$1
validate_target

old_dir="$(pwd)"
cd /usr/${TARGET}
message "now working in target sysroot directory: [${Mon}$(pwd)${Boff}]"

for tool in ${toolchain[@]}; do
    message "  building (quickpkg) binary package for ${LBon}cross-${TARGET}/${tool}${Boff}"
    quickpkg --include-unmodified-config=y cross-${TARGET}/${tool} ; right_status $?
done

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
