#!/bin/bash
#
# cb-umount   (c) joe.brendler  2025-2072
# un-mount a crossbuild image file from its associated TARGET
#

source /usr/sbin/script_header_joetoo
message_n "sourcing BUILD ..."
source /etc/crossbuild-tools/BUILD ; right_status $?
message_n "sourcing BPN ..."
source /etc/crossbuild-tools/BPN ; right_status $?
source /usr/sbin/script_header_joetoo_extended

VERBOSE=$TRUE
# set default verbosity only if it is not already set
[ -z $verbosity ] && verbosity=3

PN=$(basename $0)

message_n "sourcing cb-common-functions ..."
source /usr/sbin/cb-common-functions ; right_status $?
TARGET=""

usage() {
    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
    smaller_script_common_usage_message
    exit 1
}

umount-board() {
    # inspect target (mount point) - is anything mounted? (un-mount)
    if [ ! -z "$(findmnt -n -M /usr/${TARGET})" ] ; then
        # something is mounted - un-mount it
        E_message "${BYon}the following devices are mounted on /usr/${TARGET} --${Boff}"
        mount | grep "on /usr/${TARGET}" | sed 's|^|    |'
        message_n "recursively umounting /usr/${TARGET} ..."
	umount -l /usr/${TARGET}/dev{/shm,/pts,} 2>/dev/null
        umount -R /usr/${TARGET} && right_status $? || die "failed to umount -R /usr/${TARGET}"
    else
        message "nothing is mounted on /usr/${TARGET} ; continuing"
    fi
    # inspect for loop devices attached to BOARD image file
    message "looking for loop device attached to /usr/${BOARD}.img ..."
    loop_dev=$(losetup -a | grep "/usr/${BOARD}.img" | cut -d':' -f1)
    if [ -n "${loop_dev}" ] ; then
        message_n "detaching ${loop_dev} ..."
        losetup -d ${loop_dev} && right_status $? || die "failed to losetup -d ${loop_dev}"
    else
        message "no loop device is attached to /usr/${BOARD}.img ; continuing"
    fi
    return 0
}

#-----[ main script ]---------------------------------------------
checkroot
separator "(${BOARD})" "${PN}"
[ $# -ne 1 ] && usage
BOARD=$1
validate_target ${BOARD} || die "Failed to validate_target [${BOARD}]"

old_dir="$(pwd)"
cd /usr/
message "now working in parent of crossbuild target directory: [${Mon}$(pwd)${Boff}]"

umount-board

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
exit 0
