#!/bin/bash
#
# populate-target   (c) joe.brendler  2025-2072
# copy appropriate template files into crossbuild target filesystem
#

source /usr/sbin/script_header_joetoo
message_n "sourcing BUILD ..."
source /etc/crossbuild-tools/BUILD ; right_status $?
message_n "sourcing BPN ..."
source /etc/crossbuild-tools/BPN ; right_status $?
source /usr/sbin/script_header_joetoo_extended

VERBOSE=$TRUE
#verbosity=2
verbosity=3

PN=$(basename $0)

SOURCE_DIR=/etc/crossbuild-tools/mkenv-files
IMAGE_CONFIG_FILE=/root/.cb-config    # relative to /usr/${TARGET}

message_n "sourcing cb-common-functions ..."
source /usr/sbin/cb-common-functions ; right_status $?
TARGET=""

usage() {
    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
    source /etc/${BPN}/local.usage
    exit
}

save_config() {
    FLAGGED=$FALSE
    # first write creates/overwrites file; others append
    message_n "saving BOARD to /usr/${TARGET}${IMAGE_CONFIG_FILE} ..."
    echo "export BOARD=${BOARD}" > /usr/${TARGET}${IMAGE_CONFIG_FILE} && \
        right_status $? || ( right_status $? && FLAGGED=$TRUE )
    message_n "saving TARGET to /usr/${TARGET}${IMAGE_CONFIG_FILE} ..."
    echo "export TARGET=${TARGET}" >> /usr/${TARGET}${IMAGE_CONFIG_FILE}  && \
        right_status $? || ( right_status $? && FLAGGED=$TRUE )
    message_n "saving TARGET_ARCH to /usr/${TARGET}${IMAGE_CONFIG_FILE} ..."
    echo "export TARGET_ARCH=${TARGET_ARCH}" >> /usr/${TARGET}${IMAGE_CONFIG_FILE} && \
        right_status $? || ( right_status $? && FLAGGED=$TRUE )
    message_n "saving QEMU_ARCH to /usr/${TARGET}${IMAGE_CONFIG_FILE} ..."
    echo "export QEMU_ARCH=${QEMU_ARCH}" >> /usr/${TARGET}${IMAGE_CONFIG_FILE}
        right_status $? || ( right_status $? && FLAGGED=$TRUE )
    [ $FLAGGED ] && return 1 || return 0
}

#-----[ main script ]---------------------------------------------
checkroot
separator ${PN} $(hostname)
[ $# -ne 1 ] && usage
BOARD=$1
validate_target ${BOARD} || die "Failed to validate_target [${BOARD}]"

old_dir="$(pwd)"
cd /usr/${TARGET}
message "now working in crossbuild target directory: [${Mon}$(pwd)${Boff}]"

# populate the BUILD assignment file in this board image's own
# /etc/crossbuild-tools directory by pre-populating BUILD in mkenv-files/common
# the "install files from common sources" step below will actually put it in the image
build_dir="${SOURCE_DIR%/}/common/etc/crossbuild-tools"
message_n "checking for build_dir [${build_dir}] ..."
[ ! -d ${build_dir} ] && mkdir -p ${build_dir} ; right_status $?
message_n "updating BUILD ..."
cp /etc/crossbuild-tools/BUILD ${build_dir%/}/ ; right_status $?

# populate the BPN assignment file in this board image's own
# /etc/crossbuild-tools directory by pre-populating BPN in mkenv-files/common
# the "install files from common sources" step below will actually put it in the image
bpn_dir="${SOURCE_DIR%/}/common/etc/crossbuild-tools"
message_n "checking for bpn_dir [${bpn_dir}] ..."
[ ! -d ${bpn_dir} ] && mkdir -p ${bpn_dir} ; right_status $?
message_n "updating BPN ..."
cp /etc/crossbuild-tools/BPN ${bpn_dir%/}/ ; right_status $?

# install files from board-unique sources
install_files_from_source "${SOURCE_DIR%/}/${BOARD}/" || \
    E_message "failed while installing files from ${SOURCE_DIR%/}/${BOARD}/"

# install files from common sources
install_files_from_source "${SOURCE_DIR%/}/common/" || \
    E_message "failed while installing files from ${SOURCE_DIR%/}/common/"

# make scripts executable in chroot (joetoo-meta should have deployed them with emerge-world)
DESTINATION="/usr/${TARGET}/usr/sbin"
message_n "setting permissions on scripts in ${DESTINATION} ..."
chmod +x ${DESTINATION}/script_header_joetoo* && \
chmod +x ${DESTINATION}/finalize-chroot && \
chmod +x ${DESTINATION}/install_my_local_ca_certificates && \
right_status $? || ( right_status $? && exit 1 )

# save basic confguration data in /usr/${TARGET}${IMAGE_CONFIG_FILE}
save_config || die "Failed to save_config"

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
exit 0
