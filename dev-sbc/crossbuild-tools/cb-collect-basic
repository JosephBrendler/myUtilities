#!/bin/bash
#
# collect-sensitive (for system rebuild) (c) joe.brendler  2025-2072
# collect appropriate template files for crossbuild target filesystem
#

source /usr/sbin/script_header_joetoo
VERBOSE=$TRUE
#verbosity=2
verbosity=3

PN=$(basename $0)

message_n "sourcing /usr/sbin/cb-common-functions ..."
source /usr/sbin/cb-common-functions ; right_status $?

user=joe
collection_directory="stuff_for_mkenv_$(hostname)"

source_dirs=(
'etc/portage/binrepos.conf'
'etc/portage/repos.conf'
'usr/local/sbin'
)

source_files=(
'etc/portage/make.conf'
'etc/portage/package.accept_keywords/joetoo'
'etc/portage/package.use/joetoo'
'etc/conf.d/net'
'etc/conf.d/modules'
)

usage() {
    message "${BRon}no arguments allowed${Boff}"
#    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
#    usage-common-message
    exit 1
}

collect-basic() {
    FLAGGED=$FALSE
    message "running collect-sensitive()"
    old_dir=$(pwd)
    cd /home/${user}
    message "now working in ${BMon}$(pwd)${Boff}"
    message_n "creating collection directory [${collection_directory}]"
    [ ! -d ${collection_directory} ] && mkdir -p ${collection_directory} ; result=$?
    right_status $result ; [ $result -ne 0 ] && FLAGGED=$TRUE
    cd ${collection_directory}
    message "now working in ${BMon}$(pwd)${Boff}"

    for ((i=0; i<${#source_dirs[@]}; i++)); do
        message_n "copying ${source_dirs[$i]} content"
        [ ! -d ./${source_dirs[$i]} ] && mkdir -p ./${source_dirs[$i]}
        cp -a /${source_dirs[$i]}/* ./${source_dirs[$i]}/
        result=$? ; right_status $result ; [ $result -ne 0 ] && FLAGGED=$TRUE
    done

    for ((i=0; i<${#source_files[@]}; i++)); do
        message_n "copying ${source_files[$i]}"
        z=$(dirname ${source_files[$i]})
        [ ! -d ./${z} ] && mkdir -p ./${z}
        cp -a /${source_files[$i]} ./${source_files[$i]}
        result=$? ; right_status $result ; [ $result -ne 0 ] && FLAGGED=$TRUE
    done

    message "please inspect results ..."
    tree -a
    echo

    cd ${old_dir}
    message "now working in previous directory ${BMon}$(pwd)${Boff}"
}

#-----[ main script ]---------------------------------------------
checkroot
separator "($(hostname))" "${PN}"
#[ $# -ne 1 ] && usage
#BOARD=$1
#validate_target ${BOARD} || die "failed to validate_target"
#validate_source ${BOARD} || die "failed to validate_source"
# not currently doing anything with that info ...
[ $# -ne 0 ] && usage

collect-basic || die "failed to collect-basic"

exit 0
