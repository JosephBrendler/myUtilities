#!/bin/bash
# layout.conf for raspi-microSDcard
# joe brendler 8 June 2025
#
# Notes:
#  (1) each line below must be a valid bash command; this file will be sourced by using scripts
#  (2) program will create partitions sized and formatted as indicated below

# partition layout - three comma-separated fields in each entry
#    for the first, provide starting sector, size (MiB), and format (vfat, ext4, luks)
#    for partition 2 - (n-1) provide size and format
#    for the final partition, only format is needed
# Notes:
#    partition1_start_sector=16384  ## for raspi nvme (follow what genrpi does)
#    partition1_start_sector=32768  ## for rockchip nvme (leave room for u-boot)
#    partition1_start_sector=8192   ## for old timker boards SD card
#    partition1_format (current options vfat, ext4)
#    partition1_format=vfat    # for raspi (follow what genrpi does)
#    partition1_format=ext4    # for rockchip (follow what armbian does)
#    partition2_format (current options vfat, ext4, luks)
#    partition2_format=luks    # for raspi (joetoo standard)
# Other partition notes:
#    NVMe norm for amd64 follows
#        Disk /dev/nvme0n1: 1.86 TiB, 2048408248320 bytes, 4000797360 sectors
#        Disk model: Lexar SSD NM620 2TB
#        Units: sectors of 1 * 512 = 512 bytes
#        Sector size (logical/physical): 512 bytes / 512 bytes
#        I/O size (minimum/optimal): 512 bytes / 512 bytes
#        Disklabel type: gpt
#        Disk identifier: 4693C850-DF23-CF42-A8FF-2C0A9C1D91BE
#        Device           Start        End    Sectors  Size Type
#        /dev/nvme0n1p1    2048      10239       8192    4M BIOS boot
#        /dev/nvme0n1p2   10240     522239     512000  250M EFI System
#        /dev/nvme0n1p3  522240    2099199    1576960  770M Linux filesystem
#        /dev/nvme0n1p4 2099200 4000796671 3998697472  1.9T Linux LVM
#    NVMe norm for raspi (cm)4/5 follows
#        Disk model: MasonSemi SSD
#        Units: sectors of 1 * 512 = 512 bytes
#        Sector size (logical/physical): 512 bytes / 512 bytes
#        I/O size (minimum/optimal): 512 bytes / 512 bytes
#        Disklabel type: dos
#        Disk identifier: 0x7a970351
#        Device         Boot   Start        End   Sectors   Size Id Type
#        /dev/nvme0n1p1        16384    1064959   1048576   512M  c W95 FAT32 (LBA)
#        /dev/nvme0n1p2      1064960 1000215215 999150256 476.4G 83 Linux
#    NVMe norm for rock 5c follows
#        Disk /dev/nvme0n1: 931.51 GiB, 1000204886016 bytes, 1953525168 sectors
#        Disk model: CT1000P3SSD8
#        Units: sectors of 1 * 512 = 512 bytes
#        Sector size (logical/physical): 512 bytes / 512 bytes
#        I/O size (minimum/optimal): 512 bytes / 512 bytes
#        Disklabel type: gpt
#        Disk identifier: EC5714FA-04D9-4647-9D36-6D6C9A65FD79
#        Device           Start        End    Sectors  Size Type
#        /dev/nvme0n1p1   32768    1026047     993280  485M Linux filesystem
#        /dev/nvme0n1p2 1026048 1953523711 1952497664  931G Linux LVM

# VERBOSE - set $FALSE to silence info/debug output
#VERBOSE=$TRUE

# verbosity - 1: info 2-3: more info; 4-5: debug
#verbosity=3
verbosity=5

# outputdevice_sector_size_bytes -- size of sectors on block device
#outputdevice_sector_size_bytes=512

# disklabel_type (current options dos, gpt)
disklabel_type="gpt"

# partition_list ( start sector, size (MiB), format (bios, vfat, ext4, or luks) )
# NOTE: both sgdisk and fdisk (specifically in its GPT mode) automatically designate
# the first partition of a GPT disk as an EFI System Partition (ESP)
# So, if disklabel_type="gpt" above, formats other than "vfat" will be ignored for partiiton 1
partition_list=(
'2048,250,vfat'
'NA,770,ext4'
'NA,NA,luks'
)

#-----[ cryptsetup luks layout ]------------------
# DEV_HOSTNAME -- used in cryptsetup layout naming
DEV_HOSTNAME=

# crypt_keydev -- block device on which key will be found
#crypt_keydev=/dev/sda1
#crypt_keydev='49C1-7352'
crypt_keydev='KEY'

# crypt_passphrase
crypt_passphrase=

# create LVs (work in progress - layout for LVs might depend on total size)
# (todo: automate with relative sizing)
# each element of the array must be comma separated 'name,size,format'
# lv_list ( name (string), size (*integer GiB), format (ext4, swap) )
lv_list=(
'root,10,ext4'
'swap,8,swap'
'usr,40,ext4'
'var,100,ext4'
'tmp,50,ext4'
'opt,5,ext4'
'home,200,ext4'
'srv,500,ext4'
'extra,17,ext4'
)
