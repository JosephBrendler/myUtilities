# cb-populate-image loads "board-specific" files first, then "common" files,
# and then it will look for custom content.  To do this, it sets
# CUSTOM_SOURCE_DIR=/etc/crossbuild-tools/custom_content/mkimg-files
#
# For simplicity, an eselect module is provided, to set up the symlink
# for /etc/crossbuild-tools/custom_content/mkimg-files
#
# for the eselect module to work properly, the link(s) it chooses from
# must be in the same directory (/etc/crossbuild-tools/custom_content/)
# and they should all be named "content_for_mkimg_<somethingorother>"
# a template director with sample custom content is provided at
# /etc/crossbuild-tools/custom_content/content_for_mkimg_template
# note: the file structure inside it will be replicated on the target image
#
# Because custom content is likely sensitive and user-unique, it is
# recommended that you create a similar filestructure with these contents
# in your user(s) own directory(ies) and create a symlink in 
# /etc/crossbuild-tools/custom_content/ (of the same name)
# pointing to that content.  Then the eselect module will then
# be able to select  that symlink and associated content as one
# of its options
#
# example
# 
# /home/joe/content_for_mkimg_raspi36401

# initialize the custom content symlink
$ sudo eselect cb-populate-image list
    Available /etc/crossbuild-tools/custom_content/mkimg-files symlink targets:
      [1]   content_for_mkimg_template

$ sudo eselect cb-populate-image set 1
$ ls /etc/crossbuild-tools/custom_content/
    content_for_mkimg_template
    mkimg-files -> content_for_mkimg_template

# create a symlink in /etc/crossbuild-tools/custom_content/ pointing
# to your custom content (see example target below)

$ cd /etc/crossbuild-tools/custom_content/
$ sudo ln -s /home/joe/content_for_mkimg_raspi36401 content_for_mkimg_raspi36401

# now use eselect to choose that content

$ sudo eselect cb-populate-image list
    Available /etc/crossbuild-tools/custom_content/mkimg-files symlink targets:
      [1]   content_for_mkimg_raspi36401
      [2]   content_for_mkimg_template *

$ sudo eselect cb-populate-image set 1
$ ls
    content_for_mkimg_template
    mkimg-files -> content_for_mkimg_raspi36401
    content_for_mkimg_raspi36401 -> /home/joe/content_for_mkimg_raspi36401

# Example file structure of custom content
#
# use dev-sbc/collect-system-files on a system you want to replicate -
# and use "scp -r " to copy the resulting filestructure to your crossbuild host
# e.g. /home/joe/content_for_mkimg_raspi36401 is a structure containing 
# sensitive custom content for user "joe" on system "raspi36401" --

$ tree -a /home/joe/content_for_mkimg_raspi36401 | sed 's|^|    |'
    /home/joe/content_for_mkimg_raspi36401
    |-- etc
    |   |-- apache2
    |   |   |-- ssl
    |   |   |   |-- imjoe.pem
    |   |   |   |-- raspi36401.brendler.crt
    |   |   |   `-- raspi36401.brendler.key
    |   |   `-- vhosts.d
    |   |       |-- 00_default_ssl_vhost.conf
    |   |       `-- 00_default_vhost.conf
    |   |-- conf.d
    |   |   |-- hostname
    |   |   |-- modules
    |   |   `-- net
    |   |-- hostname
    |   |-- openvpn
    |   |   |-- down.sh
    |   |   |-- local.conf
    |   |   |-- openvpnkeys_2024
    |   |   |   |-- Elrond.ovpn
    |   |   |   |-- Elrond_local.ovpn
    |   |   |   |-- Elrondclient_raspi36401.crt
    |   |   |   |-- Elrondclient_raspi36401.key
    |   |   |   |-- Elrondscript.sh
    |   |   |   |-- README_openvpn
    |   |   |   |-- brendler-local.ovpn
    |   |   |   |-- brendler-remote.ovpn
    |   |   |   |-- ca.crt
    |   |   |   `-- ta.key
    |   |   |-- remote.conf
    |   |   |-- server.conf
    |   |   `-- up.sh
    |   `-- wpa_supplicant
    |       `-- wpa_supplicant.conf
    |-- home
    |   `-- joe
    |       |-- .bash_profile
    |       |-- .bashrc
    |       `-- .ssh
    |           |-- authorized_keys
    |           |-- config
    |           |-- id_dsa
    |           |-- id_dsa.pub
    |           |-- id_ecdsa
    |           |-- id_ecdsa.pub
    |           |-- id_ed25519
    |           |-- id_ed25519.pub
    |           |-- id_rsa
    |           |-- id_rsa.keystore
    |           |-- id_rsa.pub
    |           `-- known_hosts
    `-- root
        `-- .bash_profile
    
    13 directories, 40 files

