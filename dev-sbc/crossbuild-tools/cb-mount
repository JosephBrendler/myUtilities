#!/bin/bash
#
# mount   (c) joe.brendler  2025-2072
# copy appropriate template files into crossbuild target filesystem
#

source /usr/sbin/script_header_joetoo
VERBOSE=$TRUE
#verbosity=2
verbosity=3

PN=$(basename $0)

message_n "sourcing BUILD ..."
source /etc/crossbuild-tools/BUILD ; right_status $?

message_n "sourcing cb-common-functions ..."
source /usr/sbin/cb-common-functions ; right_status $?
TARGET=""

usage() {
    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
    usage-common-message
    exit 1
}

mount-board() {
    # inspect target (mount point) - is anything mounted? (un-mount)
    if [ -n "$(mount | grep "on /usr/${TARGET}")" ] ; then
        # something is mounted - un-mount it
        E_message "${BYon}the following devices are already mounted on /usr/${TARGET} --${Boff}"
        mount | grep "on /usr/${TARGET}"
        exit 1
    else
        message "nothing is mounted on /usr/${TARGET} ; continuing"
    fi
    # inspect for loop devices attached to BOARD image file
    message "looking for loop device attached to /usr/${BOARD}.img ..."
    loop_dev=$(losetup -a | grep "/usr/${BOARD}.img" | cut -d':' -f1)
    if [ ! -z "${loop_dev}" ] ; then
        E_message "${BYon}${loop_dev} is already attached to /usr/${BOARD}.img"
        exit 1
    else
        message "no loop device is yet attached to /usr/${BOARD}.img; continuing"
    fi
    message_n "attaching loop device"
    img_loop_dev=$(losetup --find --show --partscan /usr/${BOARD}.img) && \
        ( echo -n " (${img_loop_dev})" && right_status $? ) || ( right_status $? && exit 1 )
    # Get partition device names
    message_n "getting device name for partition 1 ..."
    img_partition1_dev="${img_loop_dev}p1" && result=$? && \
    echo -n " ( ${img_partition1_dev} )" && \
    right_status ${result} || ( right_status $? && exit 1 )
    message_n "getting device name for partition 1 ..."
    img_partition2_dev="${img_loop_dev}p2" && result=$? && \
    echo -n " ( ${img_partition2_dev} )" && \
    right_status ${result} || ( right_status $? && exit 1 )
    # now mount the partitions
    message_n "mounting rootfs (${img_partition2_dev}) on /usr/${TARGET}/ ..."
    mount ${img_partition2_dev} /usr/${TARGET}/ && right_status $? || ( right_status $? && exit 1 )
    message_n "mounting bootfs (${img_partition1_dev}) on /usr/${TARGET}/boot/ ..."
    mount ${img_partition1_dev} /usr/${TARGET}/boot/ && right_status $? || ( right_status $? && exit 1 )
    return 0
}

#-----[ main script ]---------------------------------------------
checkroot
separator "(${BOARD})" "${PN}"
[ $# -ne 1 ] && usage
BOARD=$1
validate_target ${BOARD}

old_dir="$(pwd)"
cd /usr/
message "now working in parent of crossbuild target directory: [${Mon}$(pwd)${Boff}]"

mount-board

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
exit 0
