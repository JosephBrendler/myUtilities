#!/bin/bash
#
# buildtarget-qemu
#

source /usr/local/sbin/script_header_brendlefly
VERBOSE=$TRUE
verbosity=3
PN=$(basename $0)

message_n "sourcing BUILD ..."
source /etc/crossbuild-tools/BUILD ; right_status $?

message_n "sourcing cb-common-functions ..."
source /usr/bin/cb-common-functions ; right_status $?

TARGET=""
ARCH=""

usage() {
    message "${BRon}usage: ${BGon}${PN} <BOARD>${Boff}"
    usage-common-message
    exit
}

#-----[ main script ]---------------------------------------------
checkroot
separator ${PN} $(hostname)
[ $# -ne 1 ] && usage
BOARD=$1
validate_target ${BOARD}

old_dir="$(pwd)"
cd /usr/${TARGET}
message "now working in target sysroot directory: [${Mon}$(pwd)${Boff}]"

[[ $INTERACTIVE ]] && emerge-options="-av1" || emerge-options="-v1" 

message "building qemu for ${TARGET} ..."
FEATURES="-getbinpkg" QEMU_USER_TARGETS="${TARGET_ARCH}" QEMU_SOFTMMU_TARGETS="${TARGET_ARCH}" \
    USE="static-user -plugins static-libs" emerge ${emerge-options} --buildpkg qemu
result=$? ; right_status $result

if [ $result -eq 0 ] ; then
    message "installing qemu binary in ${TARGET} ..."
    ROOT=/usr/${TARGET}/ emerge ${emerge-options} --usepkgonly --nodeps qemu && \
    right_status $? || ( right_status $? && exit 1 )
else
    E_message "${BRon}Failed to build qemu for ${TARGET} ...${Boff}"
    exit 1
fi

# set up for rust-std [NOTE: this doesn't really work yet]
if [ -z "$(grep -iR rust-src /etc/portage/package.use/)" ] ; then
    # there is no rust-src USE in package.use, so add it
    message_n "adding USE rust-src to package.use ..."
    echo "dev-lang/rust rust-src" >> /etc/portage/package.use/joetoo && \
    echo "dev-lang/rust-bin rust-src" >> /etc/portage/package.use/joetoo
    right_status $? || ( right_status $? && exit 1 )
fi
if [ -z "$(grep 'LLVM_TARGETS' /etc/portage/make.conf)" ] ; then
    # there is no LLVM_TARGETS entry in make.conf, so add it
    message_n "adding LLVM_TARGETS to make.conf ..."
    echo 'LLVM_TARGETS="AArch64 AMDGPU ARM AVR BPF Hexagon Lanai LoongArch MSP430 Mips NVPTX PowerPC RISCV Sparc SystemZ VE WebAssembly X86 XCore"' >> /etc/portage/make.conf
    right_status $? || ( right_status $? && exit 1 )
fi
echo
message "double-check make.conf and package.use, and then rebuild rust and llvm"
message "  with rust-src/LLVM_TARGETS configuration (run emerge -uavDN world)"
E_message "  Note: as of 15 April 2025, emerge cross-${TARGET}/rust-std doesn't work"
echo
message_n "creating rust-std link in crossdev repo ..."
cd /var/db/repos/crossdev/cross-${TARGET} && \
ln -s /var/db/repos/gentoo/sys-devel/rust-std
right_status $? || ( right_status $? && exit 1 )
message_n "unmasking rust-std in package.accept_keywords ..."
echo "cross-${TARGET}/rust-std **" >> /etc/portage/package.accept_keywords/cross-target-rust-std
right_status $? || ( right_status $? && exit 1 )

echo
cd $old_dir
message "now working in previous directory: [${Mon}$(pwd)${Boff}]"
exit 0
