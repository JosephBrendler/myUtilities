#!/bin/bash
# joe brendler; 15 May 2024
# test the status leds for an sbc
#
# Note gpioset syntax:  gpioset -d push-pull -c <chip#> -t<toggleduration> <line#>=0 (off; =1 for on)
# Convention:  GPIOH_XN is chip=H and line= 8*X + N
#
TRUE=0
FALSE=

chip=0
line=1
VPN_LED=(2 9)         # GPIO2_B1 pin 3 (VPN LED)(green)
SVC_LED=(2 10)        # GPIO2_B2 pin 5 (Services LED)(yellow)
TEMP_LED=(0 8)        # GPIO0_B0 pin 7 (Temp LED)(red)

#blinkwait=0.05        # s wait during fluttler blink
blinkwait=1            # s wait during fluttler blink

BLINKS=3              # how many times to blink

VERBOSE=$TRUE    # verbpse logging pm/off
verbosity=2     # 0: none; 1: restarts; 2: errors; 3: success; 4: dump vectors on restart

#-----[ override defaults with config file ]--------------------
[ -e /etc/sbc-status-leds/sbc-status-leds.conf ] && \
      source /etc/sbc-status-leds/sbc-status-leds.conf || \
      ( echo "Error: symlink /etc/sbc-status-leds/sbc-status-leds.conf does not exist" ;
        echo "use eselect sbc-status-leds to create it" )

#-----[ functions ]---------------------------------------------

light_off() {
  gpioset -d push-pull -c${1} -t0 ${2}=0
}

light_on() {
  gpioset -d push-pull -c${1} -t0 ${2}=1
}

blink_light() {
  # blink LED off(even)/on(odd), BLINKS times, quickly
  for ((i=0; i<$(( ${BLINKS} * 2 )); i++))
  do
    gpioset -d push-pull -c${1} -t0 ${2}=$(( ${i} % 2 ))
    sleep ${blinkwait}
  done
}

#-----[ main script ]-----------------------
#echo "blinkwait: $blinkwait"

blink_light ${VPN_LED[${chip}]} ${VPN_LED[${line}]}
blink_light ${SVC_LED[${chip}]} ${SVC_LED[${line}]}
blink_light ${TEMP_LED[${chip}]} ${TEMP_LED[${line}]}

#light_off ${VPN_LED[${chip}]} ${VPN_LED[${line}]}
#light_off ${SVC_LED[${chip}]} ${SVC_LED[${line}]}
#light_off ${TEMP_LED[${chip}]} ${TEMP_LED[${line}]}
